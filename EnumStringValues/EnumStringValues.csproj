<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net40;net451;net461</TargetFrameworks>
    <AssemblyName>EnumStringValues</AssemblyName>
    <PackageId>EnumStringValues</PackageId>
    <PackageVersion>4.0.0</PackageVersion>
    <Version>4.0.0</Version>
    <Title>Enum String Values</Title>
    <Authors>Brondahl</Authors>
    <PackageOutputPath>../nuget</PackageOutputPath>
    <PackageLicenseUrl>http://opensource.org/licenses/MIT</PackageLicenseUrl>
    <RepositoryUrl>https://github.com/Brondahl/EnumStringValues</RepositoryUrl>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Description>
    Library to allow conversion between an Enum Value and a string, in both directions.
    v4.0.0 changes default behaviour to include caching and use enum literal names.
    It also adds thread-safety, but drops support for .NET 3.5
    See nuget for full version history
    </Description>
    <PackageReleaseNotes>
    Version 4.0.0
       - Change default behaviours.
          - Caching is enabled by default.
          - Enum literal name is AlwaysIncluded by default.
          - See docs and release notes for versions 3.1.0 and 3.2.0, to change these setting.
       - Add thread-safety.
          - Caching dictionaries were not thread-safe; now they are.
       - Drop support for .NET frameworks prior to .NET 4
          - Required, in order to implement thread-safety.
          - Note that version 3.2.0 does support .NET 3.5 and has all the same functionality available, but without thread-safety and with different default Behaviour.
          - Bug fixes will be applied to v 3.2.* but no new features will support .NET 3.5. Please contact me if you wish to argue otherwise.
    Version 3.2.0
       - Add direct control over how the enum's literal name is used.
          - By default behaviour remains the same - literal name is used if and only if there are no StringValue attributes defined.
          - Option is added to allow for literal name to always be included (as lowest priority) or never be included.
          - Control is modified via: `EnumExtensions.Behaviour.ShouldIncludeUnderlyingName = UnderlyingNameUsed.Always`
          - Default will be changed to 'Always' in v4.0
    Version 3.1.0
       - Add option of caching all work done from all end points.
          - Caching is opt-in; accessed by setting EnumExtensions.Behaviour.UseCaching = true.
          - Caching is NOT thread-safe (to maintain .NET 3.5 support)
          - Thread-safety will be added in v4.0
    Version 3.0.1
       - Update codebase to C# 7.3 and thus add System.Enum constraints on all typed methods.
          - Only impact should be to convert run-time errors into compile-time errors
    Version 3.0
       - Convert the project to .Net Standard 2.0
       - Remove the Obsolete `ParseStringValueToEnum` method. Please use `ParseToEnum`
    </PackageReleaseNotes>
    <Copyright>Copyright 2014</Copyright>
    <PackageTags>Enum String StringValue EnumStringValue EnumStringValues</PackageTags>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <LangVersion>7.3</LangVersion>
    <NeutralLanguage></NeutralLanguage>
  </PropertyGroup>

</Project>
